version: "3.3"

networks:
  app-tier:
    driver: bridge

services:
  gateway:
    image: nginx:latest
    ports:
      - "80:80"
    container_name: gateway
    networks:
      - app-tier
    depends_on:
      - acl-service
      - test-service
      - healthcheck-service
      - kafka-service
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/conf.d/default.conf

  acl-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    container_name: acl-service
    networks:
      - app-tier
    volumes:
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./tsconfig.build.json:/usr/src/app/tsconfig.build.json
      - ./src:/usr/src/app/src/
    environment:
      - PORT=3001
      - RUN_TIME=prod
      - MICROSERVICE_NAME=acl-service
    depends_on:
      - kafka-service

  test-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    container_name: test-service
    networks:
      - app-tier
    depends_on:
      - acl-service
      - kafka-service
    volumes:
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./tsconfig.build.json:/usr/src/app/tsconfig.build.json
      - ./src:/usr/src/app/src/
    environment:
      - PORT=3002
      - RUN_TIME=prod
      - MICROSERVICE_NAME=test-service

  healthcheck-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    container_name: healthcheck-service
    networks:
      - app-tier
    volumes:
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./tsconfig.build.json:/usr/src/app/tsconfig.build.json
      - ./src:/usr/src/app/src/
    environment:
      - PORT=3003
      - RUN_TIME=prod
      - MICROSERVICE_NAME=healthcheck-service
  
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    networks:
      - app-tier
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '9092:9092'
    container_name: kafka-service
    networks:
      - app-tier
    volumes:
      - 'kafka_data:/bitnami'
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./tsconfig.build.json:/usr/src/app/tsconfig.build.json
      - ./src:/usr/src/app/src/
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - RUN_TIME=prod
      - MICROSERVICE_NAME=kafka-service
      - PORT=9092
    depends_on:
      - zookeeper

volumes:
  zookeeper_data:
  kafka_data: